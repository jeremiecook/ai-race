var F = [function (x, derivate) {
    if (derivate) return -1;
    return 1 - x;
  },function (x, derivate) {
    return derivate ? 0 : x > 0 ? 1 : 0;
  },function (x, derivate) {
    var d = 1 + Math.abs(x);
    if (derivate) return x / Math.pow(d, 2);
    return x / d;
  },function (x, derivate) {
    if (derivate) return x > 0 ? 1 : 0;
    return x > 0 ? x : 0;
  },function (x, derivate) {
    var d = Math.exp(-Math.pow(x, 2));
    if (derivate) return -2 * x * d;
    return d;
  },function (x, derivate) {
    return derivate ? 0 : x > 0 ? 1 : -1;
  },function (x, derivate) {
    if (derivate) return 1 - Math.pow(Math.tanh(x), 2);
    return Math.tanh(x);
  },function (x, derivate) {
    return derivate ? 1 : x;
  },function (x, derivate) {
    if (derivate) return x > -1 && x < 1 ? 1 : 0;
    return Math.max(-1, Math.min(1, x));
  },function (x, derivate) {
    var fx = 1 / (1 + Math.exp(-x));
    if (!derivate) return fx;
    return fx * (1 - fx);
  }];
var A = [0.37,1,0.9848856743822434,2.5807839071969942,0,-0.36833430124038047,1.0538479929794404,0.8623802153430975,-1,-0.9255747229450233,8.242001526167186,-1,-1.2432938899339137,0.9999962231876907,0.9936356757505189];
var S = [0,0,0,-1.5807839071969942,-0.30630599485668,-0.5831158822834073,1.0538479929794404,0.38478438180762264,-0.053951226836259414,-1.6265920650176446,8.242001526167186,-9.905504677657298,-1.2432938899339137,12.486626431714928,5.050662556324603];
function activate(input){
for(var i = 0; i < input.length; i++) A[i] = input[i];
S[3] = A[1] * -3.1162978271329904 + A[0] * -2.2145386578986805 + 2.354893223358508;
A[3] = F[0](S[3]);
S[4] = A[1] * -0.5687114992585127 + A[0] * 0.3701339695440823 + 0.12545593567052227;
A[4] = F[1](S[4]);
S[5] = A[0] * 0.8342683986870134 + -0.8917951897976022;
A[5] = F[2](S[5]);
S[6] = A[5] * -1.3503362198809605 + A[2] * -0.02426215826987721 + 0.5803682970996067;
A[6] = F[3](S[6]);
S[7] = A[6] * -0.08901164351791531 + A[1] * -0.08161310531772772 + 0.5602022289985068;
A[7] = F[4](S[7]);
S[8] = A[7] * -1.1836332255384996 + 0.9667906490908769;
A[8] = F[5](S[8]);
S[9] = A[2] * -2.28894889844788 + 0.6277609144566889;
A[9] = F[6](S[9]);
S[10] = A[9] * -0.06288418257004569 + A[4] * 1.9391690547297298 + A[1] * 1.345309657969057 + 6.838487858338235;
A[10] = F[7](S[10]);
S[11] = A[10] * -1.4118326058053166 + 1.7308218140827165;
A[11] = F[8](S[11]);
S[12] = A[8] * 1.1981420045554207 + A[4] * 3.0975245085992698 + A[3] * -0.1899797720207555 + 0.4451448529456268;
A[12] = F[7](S[12]);
S[13] = A[12] * 2.603926148747151 + A[4] * 1.0203187419080249 + A[3] * 0.17442161599521375 + A[2] * 15.63148495594519 + -0.12129819976830492;
A[13] = F[9](S[13]);
S[14] = A[11] * -1.4279124580332443 + A[8] * -2.461079630841818 + A[5] * -1.3129173646524974 + A[1] * 3.1606228842336437 + -2.482544916879742;
A[14] = F[9](S[14]);
return [A[13],A[14]];
}var network = {activate};